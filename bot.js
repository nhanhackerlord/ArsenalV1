const fs = require('fs');
const https = require('https');
const TelegramBot = require('node-telegram-bot-api');

// === CONFIG ===
const TELEGRAM_TOKEN = '7567331917:AAHPY5MjMiWV8_1STW2q5Q7sbzGiAokpbio'; // Thay b·∫±ng token bot th·∫≠t
const CHAT_ID = '-1002673143239'; // Thay b·∫±ng chat_id th·∫≠t
const PROXY_URLS = [
    'https://api.proxyscrape.com/v4/free-proxy-list/get?request=display_proxies&country=vn&proxy_format=ipport&format=text&timeout=20000',
    'https://www.proxy-list.download/api/v1/get?type=https',
    'https://www.socks-proxy.net/',
    'https://www.proxy-listen.de/ProxyList/free-proxy-list.txt',
    'https://www.sslproxies.org/',
    'https://www.us-proxy.org/',
    'https://www.freeproxylists.net/',
    'https://www.proxynova.com/proxy-server-list/',
    'https://www.freesockslist.com/',
    'https://www.proxyserverlist24.top/freeproxy/',
    'https://www.infosniper.net/proxy_list.txt',
    'https://www.geonode.com/proxies'
]; // C√°c ngu·ªìn API proxy kh√°c nhau

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: false });

// === H√ÄM L·∫§Y PROXY T·ª™ NHI·ªÄU NGU·ªíN ===
function fetchAndSendProxy() {
    let allProxies = [];

    // L·∫∑p qua t·ª´ng URL ƒë·ªÉ l·∫•y proxy
    PROXY_URLS.forEach(url => {
        https.get(url, (res) => {
            let data = '';

            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                const proxies = data.trim().split('\n').filter(line => line.trim());
                allProxies = [...allProxies, ...proxies]; // G·ªôp t·∫•t c·∫£ proxy t·ª´ c√°c ngu·ªìn

                // Lo·∫°i b·ªè c√°c proxy tr√πng l·∫∑p
                allProxies = [...new Set(allProxies)];

                const proxyCount = allProxies.length;

                const now = new Date();
                const time = now.toLocaleString('en-GB', {
                    timeZone: 'Asia/Ho_Chi_Minh',
                    hour12: false
                }).replace(',', '');

                fs.appendFile('proxy.txt', allProxies.join('\n') + '\n', (err) => {
                    if (err) return console.error('[‚ùå] L·ªói ghi file:', err);

                    console.log(`[‚úÖ] proxy.txt ƒë√£ c·∫≠p nh·∫≠t (${proxyCount} proxies)`);

                    const caption = `Count: ${proxyCount}\nTime: ${time}\nFree Proxy On @Beonetworkjs\nüå∏ ùêÅùêûùê®ùêçùêûùê≠ùê∞ùê®ùê´ùê§ ùêâùêí üå∏`;

                    bot.sendDocument(CHAT_ID, 'proxy.txt', {
                        caption: caption,
                        parse_mode: 'HTML'
                    }).then(() => {
                        console.log('[üì§] ƒê√£ g·ª≠i proxy.txt k√®m caption l√™n Telegram');
                    }).catch(error => {
                        console.error('[‚ùå] G·ª≠i Telegram l·ªói:', error.message);
                    });
                });
            });
        }).on('error', err => {
            console.error('[‚ùå] T·∫£i proxy l·ªói:', err.message);
        });
    });
}

// === CH·∫†Y NGAY V√Ä L·∫∂P M·ªñI 10 PH√öT ===
fetchAndSendProxy();